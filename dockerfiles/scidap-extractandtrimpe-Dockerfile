#################################################################
# Dockerfile
#
# Software:         Extract and trim fastq paired-end files with trimgalore
# Software Version: version 2.1.2
# Description:      Dockerized version of etpe
# Website:          https://github.com/datirium/workflows
# Provides:         PE FASTQ extraction and trimming
# Base Image:       biowardrobe2/fastx_toolkit:v0.0.14
# Build Cmd:        docker build --no-cache --rm -t etpe-dev -f scidap-extractandtrimpe-Dockerfile . > ../../dockerbuild-extractandtrimpe.log 2>&1
# Run Cmd:          docker run --rm -ti etpe-dev /bin/bash
# Push Cmd1:        docker tag etpe-dev robertplayer/scidap-etpe:dev
#      Cmd2:        docker image push robertplayer/scidap-etpe:dev
# Pull Cmd:         docker pull robertplayer/scidap-etpe:dev
# Test dev:         docker run --rm -ti robertplayer/scidap-etpe:dev /bin/bash
# re-tag for PR:    docker tag etpe-dev robertplayer/scidap-etpe:v1.0.0
# Push for PR:      docker image push robertplayer/scidap-etpe:v1.0.0
#           
#   NOTES:  
#           
#################################################################


### Base Image
FROM biowardrobe2/fastx_toolkit:v0.0.14
LABEL maintainer="robert.player@datirium.com"
ENV DEBIAN_FRONTEND noninteractive

### Trimgalore related ENV variables
# install trimgalore
ENV VERSION_FQC 0.11.5
ENV NAME_FQC fastqc
ENV URL_FQC "http://www.bioinformatics.babraham.ac.uk/projects/${NAME_FQC}/${NAME_FQC}_v${VERSION_FQC}.zip"

ENV VERSION_CADP 1.13
ENV NAME_CADP cutadapt

ENV VERSION_TRG 0.4.4
ENV NAME_TRG trim_galore
ENV URL_TRG "https://www.bioinformatics.babraham.ac.uk/projects/${NAME_TRG}/${NAME_TRG}_v${VERSION_TRG}.zip"

################## BEGIN INSTALLATION ######################

WORKDIR /tmp

COPY ./scripts/run_kraken2download.sh /usr/local/bin/

### Installing dependencies
RUN apt-get update && \
    apt -y install libgcc-10-dev libxml2-dev libcurl4-openssl-dev libssl-dev pandoc && \
    apt -y install p7zip-full && \
    git clone https://github.com/jenniferlu717/KrakenTools.git && \
    mv KrakenTools/ /usr/local/src/ && \
    pip install biopython && \
    cd /usr/local/src/ && \
    git clone https://github.com/marbl/Krona.git && \
    cd Krona/KronaTools/ && \
    ./install.pl && \
### Installing and permitting scripts
    chmod +x /usr/local/bin/run_kraken2download.sh && \
    ls -la /usr/local/bin/run_kraken2download.sh && \
### Trimgalore install
    wget -q -O /opt/${NAME_FQC}_v${VERSION_FQC}.zip ${URL_FQC} && \
    cd /opt && \
    unzip ./${NAME_FQC}_v${VERSION_FQC}.zip &&\
    chmod 777 /opt/FastQC/${NAME_FQC} && \
    ln -s /opt/FastQC/${NAME_FQC} /usr/local/bin/ &&\
    rm /opt/${NAME_FQC}_v${VERSION_FQC}.zip &&\
    pip install setuptools &&\
    pip install --upgrade pip &&\
    pip install ${NAME_CADP}==${VERSION_CADP} &&\
    mkdir /opt/${NAME_TRG} &&\
    wget --no-check-certificate -q -O /opt/${NAME_TRG}/${NAME_TRG}_v${VERSION_TRG}.zip ${URL_TRG} && \
    cd /opt/${NAME_TRG} && \
    unzip ./${NAME_TRG}_v${VERSION_TRG}.zip &&\
    chmod 777 /opt/${NAME_TRG}/${NAME_TRG} && \
    ln -s /opt/${NAME_TRG}/${NAME_TRG} /usr/local/bin/ && \
### Cleaning
    apt-get clean && \
    apt-get purge && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* && \
    strip /usr/local/bin/*; true
